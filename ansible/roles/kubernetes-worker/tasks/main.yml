- name: "Create kubelet.service.d directory"
  file: path=/etc/systemd/system/kubelet.service.d/ state=directory owner=root group=root mode=0755

- name: "Create custom directory in /etc/kubernetes"
  file: path=/etc/kubernetes/custom/ state=directory mode=0755

- name: "Copy files related to kubernetes"
  copy: src={{ item.src }} dest={{ item.dest }} owner=root group=root mode=0644
  with_items:
    - { src: 'files/etc/selinux/config', dest: '/etc/selinux/config' }
    - { src: 'files/etc/profile.d/kubernetes.sh', dest: '/etc/profile.d/01-kubernetes.sh' }
    - { src: 'files/etc/modules-load.d/ip_vs.conf', dest: '/etc/modules-load.d/ip_vs.conf' }
    - { src: 'files/etc/modules-load.d/br_netfilter.conf', dest: '/etc/modules-load.d/br_netfilter.conf' }
    - { src: 'files/etc/sysctl.d/k8s.conf', dest: '/etc/sysctl.d/k8s.conf' }
    - { src: 'files/etc/yum.repos.d/kubernetes.repo', dest: '/etc/yum.repos.d/kubernetes.repo' }
    - { src: 'files/etc/systemd/system/kubelet.service.d/10-kubeadm.conf', dest: '/etc/systemd/system/kubelet.service.d/10-kubeadm.conf' }
    - { src: 'files/var/lib/kubelet/config.yaml', dest: '/etc/kubernetes/custom/kubelet.config.yaml' }

- name: "Disable swap"
  command: swapoff -a

- name: "Disable swap in fstab"
  replace:
    dest: /etc/fstab
    regexp: '^/swap'
    replace: '#/swap'

- name: "SELinux setenforce 0"
  selinux:
    policy: targeted
    state: permissive

- name: "Load kernel modules"
  modprobe:
    name: "{{ item }}"
    state: present
  with_items:
    - ip_vs_sh
    - ip_vs_wrr
    - br_netfilter

- name: "Enable bridge-nf-call-iptables kernel module"
  command: echo '1' > /proc/sys/net/bridge/bridge-nf-call-iptables

- name: "Install Kubernetes"
  yum:
    name:
      - kubectl-{{kubernetes_version}}
      - kubelet-{{kubernetes_version}}
      - kubeadm-{{kubernetes_version}}
      - kubernetes-cni-{{ kubernetes_cni_version }}
      # - ipvsadm
    state: installed
    disable_excludes: main

- name: "Enable Kubernetes Worker Ports"
  firewalld:
    port: "{{ item.port }}/{{ item.type }}"
    permanent: true
    state: enabled
  with_items:
    - { port: 10250, type: tcp }

- name: "Restart Firewall Service"
  service:
    name: firewalld
    state: reloaded
    enabled: yes

- name: "Reload sysctl"
  command: sysctl --system

- name: "Reload daemon-reload Service"
  command: systemctl daemon-reload

- name: "Reload Docker Service"
  systemd:
    name: docker
    state: started
    enabled: yes

- name: "Restart Kublet Service"
  systemd:
    name: kubelet
    state: started
    enabled: yes

- name: "Obtain state of kublet service"
  command: systemctl status kubelet.service
  register: kubelet_status
  failed_when: kubelet_status.rc > 3

- name: "Join Master node"
  shell: kubeadm join {{ master_ip }}:6443 --token {{ kubernetes_token }} --discovery-token-unsafe-skip-ca-verification
  when: "'running' not in kubelet_status.stdout"
