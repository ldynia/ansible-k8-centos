Vagrant.configure('2') do |config|

  # Enabling  X-Forwarding
  config.ssh.forward_x11 = true
  config.ssh.forward_agent = true
  config.ssh.insert_key = false
  config.ssh.private_key_path  = 'config/ssh/insecure_private_key'

  # Config Files
  config.vm.box = 'centos/7'

  # Copy Conf Files
  config.vm.provision "file", source: "config/etc/hosts", destination: "config/etc/hosts"
  config.vm.provision "file", source: "config/etc/resolv.conf", destination: "config/etc/resolv.conf"
  # config.vm.provision "file", source: "config/conf/k8s.conf", destination: "config/conf/k8s.conf"
  # config.vm.provision "file", source: "config/repo/kubernetes.repo", destination: "config/repo/kubernetes.repo"

  # Copy Scripts Files
  config.vm.provision "file", source: "scripts/files.sh", destination: "scripts/files.sh"
  # config.vm.provision "file", source: "scripts/kubernetes.sh", destination: "scripts/kubernetes.sh"
  # config.vm.provision "file", source: "scripts/kubernetes-master.sh", destination: "scripts/kubernetes-master.sh"
  # config.vm.provision "file", source: "scripts/kubernetes-minion.sh", destination: "scripts/kubernetes-minion.sh"

  # Add host network manager
  # config.vm.network "private_network", type: "dhcp", ip: "192.168.123.13
  config.vm.provider 'virtualbox' do |vb|
    vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
  end

  # Run scripts for all VMs
  config.vm.provision :shell, path: 'scripts/files.sh'
  # config.vm.provision :shell, path: 'scripts/kernel.sh'
  # config.vm.provision :shell, path: 'scripts/kubernetes.sh'

  config.vm.define 'master' do |master|
    master.vm.provider 'virtualbox' do |vm|
      vm.cpus = 2
      vm.memory = 2048
      vm.name = 'phenx_master'
    end
    master.vm.hostname = 'master'
    master.vm.network "private_network", ip: '192.168.123.130'
    # master.vm.provision :shell, path: 'scripts/kubernetes-master.sh'
  end

  config.vm.define 'web01' do |minion|
    minion.vm.provider 'virtualbox' do |vm|
      vm.cpus = 2
      vm.memory = 1024
      vm.name = 'phenx_web01'
    end
    minion.vm.hostname = 'web01'
    minion.vm.network "private_network", ip: '192.168.123.131'
    # minion.vm.provision :shell, path: 'scripts/kubernetes-minion.sh'
  end

  config.vm.define 'compute01' do |minion|
    minion.vm.provider 'virtualbox' do |vm|
      vm.cpus = 1
      vm.memory = 1024
      vm.name = 'phenx_compute01'
    end
    minion.vm.hostname = 'compute01'
    minion.vm.network "private_network", ip: '192.168.123.132'
    # minion.vm.provision :shell, path: 'scripts/kubernetes-minion.sh'
  end

  config.vm.define 'compute02' do |minion|
    minion.vm.provider 'virtualbox' do |vm|
      vm.cpus = 1
      vm.memory = 1024
      vm.name = 'phenx_compute02'
    end
    minion.vm.hostname = 'compute02'
    minion.vm.network "private_network", ip: '192.168.123.133'
    # minion.vm.provision :shell, path: 'scripts/kubernetes-minion.sh'
  end

end
